<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">

  <Product
      Manufacturer = "$(var.MANUFACTURER)"
      Name         = "Salt Minion $(var.DisplayVersion)"
      Version      = "$(var.InternalVersion)"
      UpgradeCode  = "FC6FB3A2-65DE-41A9-AD91-D10A402BD641"
      Id           = "*"
      Language     = "1033">
    <Package InstallScope="perMachine"  InstallerVersion="500" Compressed="yes"/>

    <!-- Conditions for installation -->
    <Condition Message="Installation requires Windows 7/Server 2012. Found MsiNTProductType [MsiNTProductType], VersionNT [VersionNT]">
      Installed
      OR  (MsiNTProductType = 1) AND (VersionNT >= 601)
      OR  (MsiNTProductType = 2) AND (VersionNT >= 602)
      OR  (MsiNTProductType = 3) AND (VersionNT >= 602)
    </Condition>
    <Condition Message="Installation requires 125 MB RAM. Found [PhysicalMemory] MB">Installed OR (PhysicalMemory > 125)</Condition>

    <!-- ReadConfig_IMCAC must run immediately as Admin, the msi cannot elevate before deferred, so the user must be Admin -->
    <Condition Message="Installation requires Administrator privileges. Please open from an elevated command prompt.">Privileged</Condition>

    <Condition Message='CONFIG_TYPE must not be "[CONFIG_TYPE]". Please use "Existing", "Custom" or "Default".'>
      Installed
      OR (CONFIG_TYPE = "Existing")
      OR (CONFIG_TYPE = "Custom")
      OR (CONFIG_TYPE = "Default")
    </Condition>
    <Condition Message='START_MINION must not be [START_MINION]. Please use 1 or "" (two double quotes).'>
      (START_MINION = 1) OR NOT START_MINION OR Installed
    </Condition>
    <Condition Message='NSIS Salt Minion unexpected uninstall instruction [NSIS_UNINSTALLSTRING]'>
      NOT Installed AND (NSIS_UNINSTALLSTRING >> "uninst.exe" OR NOT NSIS_UNINSTALLSTRING) OR Installed
    </Condition>
    <Condition Message='NSIS Salt Minion unexpected version [NSIS_DISPLAYVERSION]'>
      <![CDATA[NOT Installed AND ((NSIS_DISPLAYVERSION << "v")
                               OR (NSIS_DISPLAYVERSION << "20")
                               OR (NSIS_DISPLAYVERSION << "30") OR NOT NSIS_DISPLAYVERSION) OR Installed]]>
    </Condition>

    <!-- Abort msi install if NSIS installed -->
    <Condition Message='Please manually uninstall Salt Minion [NSIS_DISPLAYVERSION]'>
      NOT (NSIS_UNINSTALLSTRING >> "uninst.exe")
    </Condition>
    <!-- Generic Abort -->
    <Condition Message="Abort [AbortReason]">Installed or (not AbortReason)</Condition>

    <!--
        Properties unset by default:
           MASTER
           MASTER_KEY
           MINION_ID
           MINION_CONFIG
           CUSTOM_CONFIG
           REMOVE_CONFIG
    -->
    <Property Id="CONFIG_TYPE"              Value="Existing"             />
    <Property Id="START_MINION"             Value="1"                    />
    <Property Id="ROOTDRIVE"                Value="C:\"/>
    <Property Id="ARPPRODUCTICON"           Value="icon.ico" />
    <Property Id="MSIRESTARTMANAGERCONTROL" Value="Disable"/>
    <Property Id="MsiLogging"               Value="v"/>
    <Property Id="MSIUSEREALADMINDETECTION" Value="1"/>
    <Property Id="WIXUI_INSTALLDIR"         Value="INSTALLDIR"/>

    <!-- Allow alias for Property  -->
    <SetProperty  Id="INSTALLDIR"   Value='[INSTALLFOLDER]' Before="LaunchConditions">INSTALLFOLDER</SetProperty>


    <!-- Search for C salt config minion file-->
    <Property Id="C_SALT_CONF_MINION_EXISTS">
      <DirectorySearch Id="ds1" Path="C:\salt\conf">
        <FileSearch Name="minion"/>
      </DirectorySearch>
    </Property>

    <!-- Search previous NSIS installation.
         Assume NSIS always (32 and 64 bit Salt-minion) writes into the 32bit WoW registry -->
    <Property           Id="NSIS_UNINSTALLSTRING">
        <RegistrySearch Id="NSIS_UNINSTALLSTRING"
            Root="HKLM" Key="SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Salt Minion" Name="UninstallString" Type="raw" Win64="no" />
    </Property>
        <Property       Id="NSIS_DISPLAYVERSION">
        <RegistrySearch Id="NSIS_DISPLAYVERSION"
            Root="HKLM" Key="SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Salt Minion" Name="DisplayVersion" Type="raw" Win64="no" />
    </Property>

    <!-- The sign of NSIS install  -->
    <SetProperty Id="nsis_exe"              Before="LaunchConditions" Value="1">NSIS_UNINSTALLSTRING >> "uninst.exe"</SetProperty>

    <CustomAction Id="stopSalt" Script="vbscript">
On error resume next
Set objShell = CreateObject("WScript.Shell")
objShell.Run "net stop salt-minion", 0, true
objShell.Run "cmd /c ping -n 5 127.0.0.1", 0, True
    </CustomAction>

    <!-- Sequence with GUI   -->
    <InstallUISequence>
      <Custom Action='ReadConfig_IMCAC'            Before='MigrateFeatureStates'     >NOT Installed</Custom>

      <LaunchConditions After="AppSearch" /> <!-- Benefit  unclear. -->
    </InstallUISequence>

    <!-- Sequence without GUI (silent, headless)   -->
    <InstallExecuteSequence>
      <!-- stopSalt to release log file -->
      <Custom Action='stopSalt'                   Before='InstallValidate'        >1</Custom>

      <Custom Action='ReadConfig_IMCAC'           Before='MigrateFeatureStates'   >NOT Installed</Custom>
      <Custom Action='del_NSIS_DECAC'              After='InstallInitialize'      >nsis_exe</Custom>

      <Custom Action='WriteConfig_CADH'
              Before='WriteConfig_DECAC'                                          >NOT Installed</Custom>
      <Custom Action='WriteConfig_DECAC'           After='WriteIniValues'         >NOT Installed</Custom>

      <Custom Action='DeleteConfig_CADH'
              Before='DeleteConfig_DECAC'                                         >REMOVE ~= "ALL"</Custom>
      <Custom Action='DeleteConfig_DECAC'          After='RemoveFiles'            >REMOVE ~= "ALL"</Custom>


      <!-- Optionally start the service  -->
      <StartServices Sequence="5900"><![CDATA[START_MINION = "1"]]></StartServices>
    </InstallExecuteSequence>   <!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  -->


    <MajorUpgrade DowngradeErrorMessage="A newer version of [ProductName] is already installed." />

    <DirectoryRef Id="TARGETDIR">
    <!--Visual C++ runtimes depend on the target platform -->
    <?if $(var.WIN64)=yes ?>
      <Merge Id="MSM_VC140_CRT" SourceFile="c:\salt_msi_resources\Microsoft_VC140_CRT_x64.msm" DiskId="1" Language="0"/>
    <?else ?>
      <Merge Id="MSM_VC140_CRT" SourceFile="c:\salt_msi_resources\Microsoft_VC140_CRT_x86.msm" DiskId="1" Language="0"/>
    <?endif ?>
    </DirectoryRef>

    <Feature Id="ProductFeature" Title="Minion" Level="1">
      <ComponentGroupRef Id="ProductComponents" />
      <Feature Id="VC140" Title="VC++ 2015" AllowAdvertise="no" Display="hidden"><MergeRef Id="MSM_VC140_CRT"/></Feature>
    </Feature>
    <ComponentGroup Id="ProductComponents" Directory="INSTALLDIR">
      <ComponentGroupRef Id="DiscoveredFiles"    />       <!-- In Product-*-discovered-files.wxs -->
      <ComponentGroupRef Id="service" />
      <ComponentRef Id="INSTALLDIR_Permissions" />
    </ComponentGroup>


    <Icon Id="icon.ico" SourceFile="salt.ico" />
    <WixVariable Id="WixUILicenseRtf" Value="LICENSE.rtf" />
    <WixVariable Id="WixUIBannerBmp" Value="imgTop.jpg" />
    <WixVariable Id="WixUIDialogBmp" Value="imgLeft.png" />


    <!-- GUI -->
    <UI>
      <UIRef Id="WixUI_Mondo" />

      <Publish Dialog="LicenseAgreementDlg"   Control="Next"   Event="NewDialog"   Value="HostsDlg" Order="3">LicenseAccepted = "1"</Publish>

      <Publish Dialog="HostsDlg"              Control="Back"   Event="NewDialog"   Value="LicenseAgreementDlg">1</Publish>
      <Publish Dialog="HostsDlg"              Control="Next"   Event="NewDialog"   Value="DirectoryDlg"       >1</Publish>
      <Publish Dialog="HostsDlg"              Control="Cancel" Event="SpawnDialog" Value="CancelDlg"          >1</Publish>

      <Publish Dialog="DirectoryDlg"          Control="Back"   Event="NewDialog"   Value="HostsDlg"           >1</Publish>
      <Publish Dialog="DirectoryDlg"          Control="Next"   Event="NewDialog"   Value="VerifyReadyDlg"     >NOT C_SALT_CONF_MINION_EXISTS</Publish>
      <Publish Dialog="DirectoryDlg"          Control="Next"   Event="NewDialog"   Value="MoveConfigDlg"      >    C_SALT_CONF_MINION_EXISTS</Publish>
      <Publish Dialog="DirectoryDlg"          Control="Cancel" Event="SpawnDialog" Value="CancelDlg"          >1</Publish>

      <Publish Dialog="MoveConfigDlg"         Control="Back"   Event="NewDialog"   Value="DirectoryDlg"       >1</Publish>
      <Publish Dialog="MoveConfigDlg"         Control="Next"   Event="NewDialog"   Value="VerifyReadyDlg"     >1</Publish>
      <Publish Dialog="MoveConfigDlg"         Control="Cancel" Event="SpawnDialog" Value="CancelDlg"          >1</Publish>

      <Publish Dialog="VerifyReadyDlg"        Control="Back"   Event="NewDialog"   Value="DirectoryDlg"       >NOT C_SALT_CONF_MINION_EXISTS</Publish>
      <Publish Dialog="VerifyReadyDlg"        Control="Back"   Event="NewDialog"   Value="MoveConfigDlg"      >    C_SALT_CONF_MINION_EXISTS</Publish>


      <Dialog Id="HostsDlg" Width="370" Height="270" Title="[ProductName] Setup">
        <Control Id="Title"        Type="Text"       X="15"  Y="6"   Width="200" Height="15" Transparent="yes" NoPrefix="yes" Text="{\WixUI_Font_Title}Hosts" />
        <Control Id="Description"  Type="Text"       X="25"  Y="23"  Width="280" Height="15" Transparent="yes" NoPrefix="yes" Text="Please specify master and minion." />
        <Control Id="BannerBitmap" Type="Bitmap"     X="0"   Y="0"   Width="370" Height="44" TabSkip="no" Text="!(loc.InstallDirDlgBannerBitmap)" />
        <Control Id="BannerLine"   Type="Line"       X="0"   Y="44"  Width="370" Height="0" />
        <Control Id="BottomLine"   Type="Line"       X="0"   Y="234" Width="370" Height="0" />

        <Control Id="MasterLabel"  Type="Text"       X="20"  Y="55"  Width="280" Height="15" Transparent="yes" NoPrefix="yes" Text="Master (single hostname or IP address):" />
        <Control Id="MasterId"     Type="Edit"       X="30"  Y="70"  Width="190" Height="15" Property="MASTER" />
        <Control Id="MinionLabel"  Type="Text"       X="20"  Y="85"  Width="280" Height="15" Transparent="yes" NoPrefix="yes" Text="Minion:" />
        <Control Id="MinionId"     Type="Edit"       X="30"  Y="100" Width="190" Height="15" Property="MINION_ID" />
        <Control Id="StartService" Type="CheckBox"   X="20"  Y="140" Width="280" Height="15" Property="START_MINION"       CheckBoxValue="1" Text="&amp;Start salt-minion service immediately"/>
        <Control Id="HideInARP"    Type="CheckBox"   X="20"  Y="155" Width="280" Height="15" Property="ARPSYSTEMCOMPONENT" CheckBoxValue="1" Text="&amp;Hide in 'Programs and Features'"/>

        <Control Id="Back"         Type="PushButton" X="180" Y="243" Width="56"  Height="17"               Text="!(loc.WixUIBack)" />
        <Control Id="Next"         Type="PushButton" X="236" Y="243" Width="56"  Height="17" Default="yes" Text="!(loc.WixUINext)" />
        <Control Id="Cancel"       Type="PushButton" X="304" Y="243" Width="56"  Height="17" Cancel="yes"  Text="!(loc.WixUICancel)"/>
      </Dialog>

      <Dialog Id="DirectoryDlg" Width="370" Height="270" Title="[ProductName] Setup">
        <Control Id="Title"        Type="Text"       X="15"  Y="6"   Width="200" Height="15" Transparent="yes" NoPrefix="yes" Text="{\WixUI_Font_Title}Installation directory" />
        <Control Id="Description"  Type="Text"       X="25"  Y="23"  Width="280" Height="15" Transparent="yes" NoPrefix="yes" Text="Please specify the installation directory." />
        <Control Id="BannerBitmap" Type="Bitmap"     X="0"   Y="0"   Width="370" Height="44" TabSkip="no" Text="!(loc.InstallDirDlgBannerBitmap)" />
        <Control Id="BannerLine"   Type="Line"       X="0"   Y="44"  Width="370" Height="0" />
        <Control Id="BottomLine"   Type="Line"       X="0"   Y="234" Width="370" Height="0" />

        <Control Id="i1" Type="Text"       X="20"  Y="55"  Width="280" Height="15" Transparent="yes" NoPrefix="yes" Text="Install program into directory:" />
        <Control Id="i2" Type="PathEdit"   X="30"  Y="70"  Width="250" Height="15" Property="INSTALLDIR" />
        <Control Id="i3" Type="PushButton" X="280" Y="70"  Width="40"  Height="15" Text="Browse" >
          <Publish Property="_BrowseProperty" Value="INSTALLDIR" Order="1">1</Publish>
          <Publish Event="SpawnDialog" Value="BrowseDlg" Order="2">1</Publish>
        </Control>

        <Control Id="Back"         Type="PushButton" X="180" Y="243" Width="56"  Height="17"               Text="!(loc.WixUIBack)" />
        <Control Id="Next"         Type="PushButton" X="236" Y="243" Width="56"  Height="17" Default="yes" Text="!(loc.WixUINext)" />
        <Control Id="Cancel"       Type="PushButton" X="304" Y="243" Width="56"  Height="17" Cancel="yes"  Text="!(loc.WixUICancel)"/>
      </Dialog>

      <Dialog Id="MoveConfigDlg" Width="370" Height="270" Title="[ProductName] Setup">
        <Control Id="Title"        Type="Text"       X="15"  Y="6"   Width="200" Height="15" Transparent="yes" NoPrefix="yes" Text="{\WixUI_Font_Title}Configuration directory" />
        <Control Id="Description"  Type="Text"       X="25"  Y="23"  Width="280" Height="15" Transparent="yes" NoPrefix="yes" Text="Please decide to move configuration." />
        <Control Id="BannerBitmap" Type="Bitmap"     X="0"   Y="0"   Width="370" Height="44" TabSkip="no" Text="!(loc.InstallDirDlgBannerBitmap)" />
        <Control Id="BannerLine"   Type="Line"       X="0"   Y="44"  Width="370" Height="0" />
        <Control Id="BottomLine"   Type="Line"       X="0"   Y="234" Width="370" Height="0" />

        <Control Id="m1" Type="CheckBox"   X="30"  Y="55" Width="320" Height="15" Property="MOVE_CONF_PROGRAMDATA" CheckBoxValue="1" Text="&amp;Move configuration from 'C:\salt' to 'C:\ProgramData\Salt Project'."/>

        <Control Id="Back"         Type="PushButton" X="180" Y="243" Width="56"  Height="17"               Text="!(loc.WixUIBack)" />
        <Control Id="Next"         Type="PushButton" X="236" Y="243" Width="56"  Height="17" Default="yes" Text="!(loc.WixUINext)" />
        <Control Id="Cancel"       Type="PushButton" X="304" Y="243" Width="56"  Height="17" Cancel="yes"  Text="!(loc.WixUICancel)"/>
      </Dialog>


    </UI>


    <!-- Declare Immediate (*_IMCAC) and deferred (*_DECAC) custom action . -->
    <CustomAction Id="ReadConfig_IMCAC"     BinaryKey='MinionConfigExt' DllEntry='ReadConfig_IMCAC'       Execute='firstSequence'/>
    <CustomAction Id="del_NSIS_DECAC"       BinaryKey='MinionConfigExt' DllEntry='del_NSIS_DECAC'         Execute='deferred' Return='check' Impersonate='no'/>
    <CustomAction Id="WriteConfig_DECAC"    BinaryKey='MinionConfigExt' DllEntry='WriteConfig_DECAC'      Execute='deferred' Return='check' Impersonate='no'/>
    <CustomAction Id="DeleteConfig_DECAC"   BinaryKey='MinionConfigExt' DllEntry='DeleteConfig_DECAC'     Execute='deferred' Return='check' Impersonate='no'/>
    <Binary                                            Id='MinionConfigExt' SourceFile='CustomAction01\CustomAction01.CA.dll'/>
    <!-- Custom Action Data Helper for deferred custom actions  -->
    <!-- master and id must be named like in YAML configuration -->
    <CustomAction Id="WriteConfig_CADH"  Property="WriteConfig_DECAC"  Value="master=[MASTER];id=[MINION_ID];MOVE_CONF_PROGRAMDATA=[MOVE_CONF_PROGRAMDATA];sourcedir=[SOURCEDIR];INSTALLDIR=[INSTALLDIR];ROOTDIR=[ROOTDIR];CONFDIR=[CONFDIR];MINION_D_DIR=[MINION_D_DIR];PKIMINIONDIR=[PKIMINIONDIR];config_type=[CONFIG_TYPE];minion_config=[MINION_CONFIG];custom_config=[CUSTOM_CONFIG];" />
    <CustomAction Id="DeleteConfig_CADH" Property="DeleteConfig_DECAC" Value="REMOVE_CONFIG=[REMOVE_CONFIG];" />


    <!-- Layout directories -->
    <Directory Id="TARGETDIR" Name="SourceDir">     <!-- fixed expression. Place of the msi file-->
      <Directory Id="$(var.PROGRAMFILES)">    <!-- typically    C:\Program Files or   C:\Program Files (x86) -->
        <Directory Id='PROGRAMFILES_MANUFACTURER' Name='$(var.MANUFACTURER)'>
          <Directory Id='INSTALLDIR' Name='$(var.PRODUCTDIR)'/> <!-- admin can set/override   -->
            <Directory Id="BINDIR"  Name="bin" />
        </Directory>
      </Directory>
      <Directory Id="CommonAppDataFolder">    <!-- typically    %ProgramData% C:\ProgramData  -->
        <Directory Id="Manufacturer_CommonAppDataFolder" Name="$(var.MANUFACTURER)">
          <Directory Id="ROOTDIR" Name="$(var.PRODUCTDIR)">
            <Directory Id="CONFDIR" Name="conf" >
              <Directory Id="MINION_D_DIR"  Name="minion.d" />
              <Directory Id="PKIDIR" Name="pki" >
                <Directory Id="PKIMINIONDIR" Name="minion" />
              </Directory>
            </Directory>
            <Directory Id="VARFOLDER"  Name="var" />
          </Directory>
        </Directory>
      </Directory>
    </Directory>

    <!-- Set ownership of INSTALLDIR to 'Localized qualified name of the Administrators group' -->
    <PropertyRef Id="WIX_ACCOUNT_ADMINISTRATORS" />
    <Component Id="INSTALLDIR_Permissions"  Directory="INSTALLDIR" Guid="B30E119F-0286-4453-8AB7-C6E916FA2843">
      <CreateFolder>
        <Permission User="[WIX_ACCOUNT_ADMINISTRATORS]" GenericAll="yes" TakeOwnership="yes" /> 
      </CreateFolder>
    </Component>

    <!-- Set directory conditionally to deprecated CONFDIR -->
    <SetProperty  Id="CONFDIR"   Value='C:\salt' Before="CostFinalize">NOT (MOVE_CONF_PROGRAMDATA = "1")</SetProperty>

    <!--  Windows service (nssm and without)-->
    <?if 1=1 ?>
    <ComponentGroup Id="service">
      <Component Id="cmp906378FA53882935FD2EC0CC58D32FAC" Directory="INSTALLDIR" Guid="{E27F3682-194D-4CC2-9F9B-F3E1D53ADCDB}">
        <File Id="ssm.exe" KeyPath="yes" Source="$(var.dist)\bin\ssm.exe" />
        <ServiceInstall
          Account="LocalSystem" ErrorControl="normal" Start="auto" Type="ownProcess" Vital="yes"
          Name="salt-minion"
          Description="Salt Minion from saltstack.com"
          DisplayName="salt-minion"
          Id="si1">
          <util:ServiceConfig
            FirstFailureActionType="none"
            SecondFailureActionType="none"
            ThirdFailureActionType="none" />
        </ServiceInstall>
        <ServiceControl Name="salt-minion" Remove="uninstall" Stop="both" Start="install" Wait="yes" Id="sc1">
          <ServiceArgument />
        </ServiceControl>
        <CreateFolder />
        <util:EventSource Log="Application" Name="nssm" EventMessageFile="[#ssm.exe]" />
        <RegistryKey Root="HKLM" Key="System\CurrentControlSet\Services\salt-minion">
          <RegistryKey Key="Parameters">
            <RegistryValue Type="expandable" Name="AppDirectory"         Value="[INSTALLDIR]bin" />
            <RegistryValue Type="expandable" Name="Application"          Value="[INSTALLDIR]bin\python.exe" />
            <RegistryValue Type="expandable" Name="AppParameters"        Value="-E -s [INSTALLDIR]bin\Scripts\salt-minion -c [INSTALLDIR]conf -l quiet" />
            <RegistryValue Type="integer"    Name="AppStopMethodConsole" Value="24000" />
            <RegistryValue Type="integer"    Name="AppStopMethodWindow"  Value="2000" />
            <RegistryValue Type="integer"    Name="AppRestartDelay"      Value="60000" />
            <RegistryKey Key="AppExit">
              <RegistryValue Type="string" Value="Restart" />
            </RegistryKey>
          </RegistryKey>
        </RegistryKey>
      </Component>
    </ComponentGroup>
    <?else ?>
    <ComponentGroup Id="service">
      <Component        Id="servicec1" Directory="BINDIR" Guid="51713960-fbe7-4e87-9472-66e3c18f76cd">
        <File           Source="$(var.dist)\bin\python.exe"  KeyPath="yes"/>
        <ServiceInstall Name="salt-minion"  DisplayName="Salt Minion"  Description="Salt Minion from saltstack.com"
                        Arguments="[BINDIR]Scripts\salt-minion -c [INSTALLDIR]conf -l quiet"
                        Account="LocalSystem"  ErrorControl="normal" Start="auto"  Type="ownProcess"  Vital="yes" >
          <util:ServiceConfig
            FirstFailureActionType="none"
            SecondFailureActionType="none"
            ThirdFailureActionType="none" />
        </ServiceInstall>
        <ServiceControl Name="salt-minion"  Start="install"  Stop="both"  Remove="uninstall"  Wait="yes" Id="ServiceControl">
          <ServiceArgument /> <!-- http://stackoverflow.com/questions/10621082/wix-serviceinstall-arguments  -->
        </ServiceControl>
      </Component>
    </ComponentGroup>
    <?endif ?>


    <!-- Do not create cab files -->
    <MediaTemplate EmbedCab="yes" CompressionLevel="low" />
  </Product>
</Wix>
