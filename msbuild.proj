<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="build">
  <PropertyGroup>
    <Configuration  Condition="'$(Configuration)'==''">Release</Configuration>
    <TargetPlatform Condition="'$(TargetPlatform)'==''">amd64</TargetPlatform>
    <BuildEnv Condition="'$(BuildEnv)'==''">$([System.IO.Path]::GetFullPath('$(MSBuildProjectDirectory)\..\salt\pkg\windows\buildenv'))</BuildEnv>
    <SolutionProperties>Configuration=$(Configuration);TargetPlatform=$(TargetPlatform);BuildEnv=$(BuildEnv)</SolutionProperties>
    <StagingDir>$(MSBuildProjectDirectory)\output</StagingDir>
    <TimestampUrl>http://timestamp.verisign.com/scripts/timstamp.dll</TimestampUrl>
  </PropertyGroup>

  <Import Project="$(MSBuildProjectDirectory)\msbuild.d\Minion.Common.targets" />

  <ItemGroup>
    <!-- 
    msbuild.proj 
     1) compiles the Visual Studio Solution salt-windows-msi.sln, think of C#.
     2) compiles and links WiX (via salt-windows-msi.sln).
    
    salt-windows-msi.sln references to wix\MinionMSI\MinionMSI.wixproj
    The intention is to enable Visual Studio to build the msi (which does not work).
    -->
    <Wix Include="$(MSBuildProjectDirectory)\salt-windows-msi.sln" />
  </ItemGroup>

  <!--
    ================================================================================
       help

         This is also useful to see what the some of the discovered/generated
         properties (e.g. DisplayVersion) will be.
    ================================================================================
  -->
  <Target Name="help" DependsOnTargets="setVersionProperties">

    <Message Text="
Usage: msbuild.exe $(MSBuildProjectDirectory)\msbuild.proj
      [/t:target[,target]] [/p:Property1=Value1 .. /p:PropertyN=ValueN]

Available Targets:

  - build:            The default. Identical to /t:wix,stage.
  - rebuild:          Identical to /t:clean,build.
  - sign:             Digitally sign install packages.
  - stage:            Copy build artifacts to a defined location.
  - clean:            Removes all build artifacts.
  - wix:              Compile the wix solution.

Available Properties:

  - BUILD_NUMBER:     The build number for this build (e.g. set by Jenkins).
  - Configuration:    Debug or Release.
  - Version:          The official Salt version being built (e.g. from git describe).
  - BuildEnv:         Where the regular salt build output is located.
  - ForceVCRedistDL:  Whether to force re-download of the vcredist file.
  - InternalVersion:  The WiX/MSI ProductVersion.
  - StagingDir:       Where to stage built binaries.
  - TargetPlatform:   Which platform to build. Expected values are win32 or amd64.
  - Thumbprint:       Certificate thumbprint from Certificate Store to use for digital signing.
  - TimestampUrl:     URL of a time stamp server.

Current Defaults:

  - BUILD_NUMBER:     '$(BUILD_NUMBER)'
  - BuildEnv:         '$(BuildEnv)'
  - Configuration:    '$(Configuration)'
  - Version:          '$(Version)'
  - DisplayVersion:   '$(DisplayVersion)'
  - InternalVersion:  '$(InternalVersion)'
  - ForceVCRedistDL:  '$(ForceVCRedistDL)'
  - StagingDir:       '$(StagingDir)'
  - TargetPlatform:   '$(TargetPlatform)'
  - Thumbprint:       '$(Thumbprint)'
  - TimestampUrl:     '$(TimestampUrl)'
  " />
  </Target>

  <Target Name="build" DependsOnTargets="wix;stage" />

  <!--
    ================================================================================
        Compile the salt-windows-msi.sln, creating an msi
    ================================================================================
  -->
  <Target Name="wix">
    <Message Text="
    ****************** msbuild.proj   *********************
    ******************          Configuration: $(Configuration)
    ******************      InstallerPlatform: $(InstallerPlatform)        
    ******************  ProcessorArchitecture: $(ProcessorArchitecture)    
    ******************               Platform: $(Platform)
    ******************         TargetPlatform: $(TargetPlatform)
    ******************                    Wix: $(Wix)
    ******************                Version: $(Version)
    ******************         DisplayVersion: $(DisplayVersion)
    ******************        InternalVersion: $(InternalVersion)
    ******************           BUILD_NUMBER: $(BUILD_NUMBER)
    ******************          PythonVersion: $(PythonVersion)
  " />

    <MSBuild Projects="%(Wix.Identity)" Properties="$(SolutionProperties)" />
  </Target>

  <!--
    ================================================================================
       stage

         Copy the built setup packages to a common staging location. Preserves the
         output between runs of msbuild /t:rebuild for different TargetPlatforms.
    ================================================================================
  -->
  <Target Name="stage">
    <ItemGroup>
      <Artifacts Include="$(MSBuildProjectDirectory)\wix\MinionMSI\bin\$(Configuration)\Salt-Minion-*-Setup.msi">
        <OutputType>wix</OutputType>
      </Artifacts>
    </ItemGroup>
    <Message Text="Copying %(Artifacts.Identity) to $(StagingDir)\%(OutputType)" />
    <Copy Condition="'$(StagingDir)'!=''" SourceFiles="@(Artifacts)" DestinationFolder="$(StagingDir)\%(Artifacts.OutputType)" />
  </Target>

  <!--
    ================================================================================
       sign

         This will attempt to digitally sign setup packages in the output staging
         location. Signing requires a valid Code Signing certificate and private
         key; both must be available in the Personal certificate store for the user
         running the build. The certificate thumbprint must be either set as an
         environment variable 'Thumbprint' or passed to msbuild as a Property.
    ================================================================================
  -->
  <Target Name="sign" AfterTargets="stage">
    <ItemGroup>
      <SignTarget Include="@(Artifacts->'$(StagingDir)\%(OutputType)\%(Filename)%(Extension)')" />
    </ItemGroup>

    <Message Condition="'$(Thumbprint)'==''" Text="No certificate thumbprint provided. Not digitally signing output." />
    <Message Importance="High" Condition="'$(Thumbprint)'!=''" Text="Digitally signing %(SignTarget.Identity) with certificate $(Thumbprint)" />

    <SignFile Condition="'$(Thumbprint)'!='' AND '$(TimestampUrl)'!=''"
      CertificateThumbprint="$(Thumbprint)" SigningTarget="@(SignTarget)" TimestampUrl="$(TimestampUrl)" />

    <SignFile Condition="'$(Thumbprint)'!='' AND '$(TimestampUrl)'==''"
      CertificateThumbprint="$(Thumbprint)" SigningTarget="@(SignTarget)" />
  </Target>

  <!--
    ================================================================================
       clean

         Runs the WiX solution's clean target.
    ================================================================================
  -->
  <Target Name="clean">
    <MSBuild Projects="%(Wix.Identity)" Properties="$(SolutionProperties)" Targets="clean" />
  </Target>

  <!--
    ================================================================================
       rebuild
    ================================================================================
  -->
  <Target Name="rebuild" DependsOnTargets="clean;build" />
</Project>
